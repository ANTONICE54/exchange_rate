// Code generated by MockGen. DO NOT EDIT.
// Source: rate_mailer_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIMailer is a mock of IMailer interface.
type MockIMailer struct {
	ctrl     *gomock.Controller
	recorder *MockIMailerMockRecorder
}

// MockIMailerMockRecorder is the mock recorder for MockIMailer.
type MockIMailerMockRecorder struct {
	mock *MockIMailer
}

// NewMockIMailer creates a new mock instance.
func NewMockIMailer(ctrl *gomock.Controller) *MockIMailer {
	mock := &MockIMailer{ctrl: ctrl}
	mock.recorder = &MockIMailerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMailer) EXPECT() *MockIMailerMockRecorder {
	return m.recorder
}

// SendEmail mocks base method.
func (m *MockIMailer) SendEmail(email string, rate float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendEmail", email, rate)
}

// SendEmail indicates an expected call of SendEmail.
func (mr *MockIMailerMockRecorder) SendEmail(email, rate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendEmail", reflect.TypeOf((*MockIMailer)(nil).SendEmail), email, rate)
}
